const CACHE_VERSION='v3.2';const CACHE_NAME=`tsg-offline-${CACHE_VERSION}`;const CORE=['./','./index.html','./styles/style.css','./assets/club_logo.png','./scripts/auth.js','./scripts/role-guard.js','./scripts/boot-auth.js','./scripts/inspector.js'];self.addEventListener('install',e=>{e.waitUntil(caches.open(CACHE_NAME).then(c=>c.addAll(CORE).catch(()=>void 0)));self.skipWaiting();});self.addEventListener('activate',e=>{e.waitUntil(caches.keys().then(keys=>Promise.all(keys.map(k=>k===CACHE_NAME?null:caches.delete(k)))));self.clients.claim();});const isSupabase=u=>/(?:supabase\.co|supabase\.in)/.test(u.hostname);const isStatic=u=>/\.(?:js|css|png|jpg|jpeg|webp|svg|ico|woff2?|ttf|eot|json)$/i.test(u.pathname);self.addEventListener('fetch',e=>{const req=e.request;const url=new URL(req.url);if(url.protocol!=='http:'&&url.protocol!=='https:')return;if(isSupabase(url)){e.respondWith(fetch(req));return;}if(req.mode==='navigate'){e.respondWith(fetch(req).then(res=>{const c=res.clone();caches.open(CACHE_NAME).then(cache=>cache.put('./index.html',c));return res;}).catch(()=>caches.match('./index.html')));return;}if(isStatic(url)){e.respondWith(caches.match(req).then(cached=>{const f=fetch(req).then(net=>{if(net&&net.ok){const cl=net.clone();caches.open(CACHE_NAME).then(cache=>cache.put(req,cl));}return net;}).catch(()=>cached);return cached||f;}));return;}e.respondWith(fetch(req).catch(()=>caches.match(req)));});